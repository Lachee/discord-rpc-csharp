{\rtf1\ansi\ansicpg1252\deff0\deflang3081{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sl240\slmult1\lang9\f0\fs24 Discord RPC CSharp Quick Start\par
Authored by Lachee :)\par
\par
This document is a quick start guide to implementing Discord Rich Presence into your game. The example project in the repository has everything you need to get started!\par
\par
First of all, import the entire /Assets/Discord RPC/ folder into your project (if you are using the asset store version or the standalone asset pack, just import that). Once imported, if you are running in Unity 5, you may notice a debug log appear along the lines of "Since you are below Unity 2017, the DLL needs to be copied over. \lang3081 ". You get this message as Unity5 requires native libraries to be imported into the root directory. The only native library this project has is the DiscordRPC.Native.dll and this will automatically be copied into the root.\lang9\par
\par
Once imported you will see a Discord RPC folder within your project, within that folder there are numerious files, prefabs and examples. They are all there you make your life easier!\par
\par
\b Discord Manager Prefab\b0\par
This prefab is required in your seen. Its recommended to stick this in your first loading scene (dont worry, DontDestroyOnLoad is set on this object). This prefab has the initial DiscordManager.cs MonoBehaviour all setup and preconfigured. You will use this MonoBehaviour to set your presence like so:\par
\pard\li720\sl240\slmult1 DiscordManager.instance.SetPresence(myPresence);\par
\pard\sl240\slmult1\par
\b Editor/\b0\par
This folder has a bunch of editor scripts in it that will make the Rich Presence inspector item much nicer to read and use, showing character validation information and ranges.\par
\par
\b Example/\b0\par
This folder has 2 examples that are highly recommended to look at. The first one is called Example_RichPresence which is a basic scene with a UI panel that allows you to manually set the presence. This scene has the basic SendPresence code and a example event listener too (Daddy Cube).\par
\par
The second scene, Example_JoinRequest is more complex. It shows how to implement a basic Join feature into your game using the Discord Rich Presence. When a Join Request is received, a new UI element will appear showing information about the request, as well as a Accept and Deny button. Use this as a basis of your own Join / Spectate system if you wish, but make note that it is only for accepting a join. To actually join, the second party needs to listen to the Join event and connect to the game using the secret (not show in this example).\par
\par
The rest of the folders within Example are resources used within the example scenes.\par
\par
\b Gizmos/\b0\par
This folder is just some icons used to distringuish the DiscordManager\par
\b\par
Plugins/\b0\par
This folder stores the Discord RPC plugins and the Newtonsoft.Json plugin. Unity will read from this automatically and include it in your builds. If you get a error involving Newtonsoft.Json (saying there is 2), you might have to delete (or disable) the one within this folder.\par
\par
\b Scripts/\b0\par
This folder contains the inner workings of the Unity intergration. It contains some classes that allow for fancy Inspector elements and better intergration within the Unity editor. A good example is DiscordUser.cs which gives the ability to get the users avatar as a Texture2D. The example scene Example_RichPresence uses this.\par
\par
\par
\par
}
